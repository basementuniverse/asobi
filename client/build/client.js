(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@basementuniverse/jsonpad-realtime-sdk/build/jsonpad-realtime-sdk.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@basementuniverse/jsonpad-realtime-sdk/build/jsonpad-realtime-sdk.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

!function(t,e){ true?e(exports):0}(this,(function(t){"use strict";class e extends CustomEvent{constructor(t,e){if(e.model.data&&"string"==typeof e.model.data)try{e.model.data=JSON.parse(e.model.data)}catch(t){}super(t,{detail:e})}}class s extends CustomEvent{constructor(t,e){super(t,{detail:e})}}const n=Object.create(null);n.open="0",n.close="1",n.ping="2",n.pong="3",n.message="4",n.upgrade="5",n.noop="6";const i=Object.create(null);Object.keys(n).forEach((t=>{i[n[t]]=t}));const r={type:"error",data:"parser error"},o="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===Object.prototype.toString.call(Blob),a="function"==typeof ArrayBuffer,h=t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t&&t.buffer instanceof ArrayBuffer,c=({type:t,data:e},s,i)=>o&&e instanceof Blob?s?i(e):p(e,i):a&&(e instanceof ArrayBuffer||h(e))?s?i(e):p(new Blob([e]),i):i(n[t]+(e||"")),p=(t,e)=>{const s=new FileReader;return s.onload=function(){const t=s.result.split(",")[1];e("b"+(t||""))},s.readAsDataURL(t)};function u(t){return t instanceof Uint8Array?t:t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}let d;const l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",f="undefined"==typeof Uint8Array?[]:new Uint8Array(256);for(let t=0;t<64;t++)f[l.charCodeAt(t)]=t;const y="function"==typeof ArrayBuffer,g=(t,e)=>{if("string"!=typeof t)return{type:"message",data:_(t,e)};const s=t.charAt(0);if("b"===s)return{type:"message",data:m(t.substring(1),e)};return i[s]?t.length>1?{type:i[s],data:t.substring(1)}:{type:i[s]}:r},m=(t,e)=>{if(y){const s=(t=>{let e,s,n,i,r,o=.75*t.length,a=t.length,h=0;"="===t[t.length-1]&&(o--,"="===t[t.length-2]&&o--);const c=new ArrayBuffer(o),p=new Uint8Array(c);for(e=0;e<a;e+=4)s=f[t.charCodeAt(e)],n=f[t.charCodeAt(e+1)],i=f[t.charCodeAt(e+2)],r=f[t.charCodeAt(e+3)],p[h++]=s<<2|n>>4,p[h++]=(15&n)<<4|i>>2,p[h++]=(3&i)<<6|63&r;return c})(t);return _(s,e)}return{base64:!0,data:t}},_=(t,e)=>"blob"===e?t instanceof Blob?t:new Blob([t]):t instanceof ArrayBuffer?t:t.buffer,b=String.fromCharCode(30);function v(){return new TransformStream({transform(t,e){!function(t,e){o&&t.data instanceof Blob?t.data.arrayBuffer().then(u).then(e):a&&(t.data instanceof ArrayBuffer||h(t.data))?e(u(t.data)):c(t,!1,(t=>{d||(d=new TextEncoder),e(d.encode(t))}))}(t,(s=>{const n=s.length;let i;if(n<126)i=new Uint8Array(1),new DataView(i.buffer).setUint8(0,n);else if(n<65536){i=new Uint8Array(3);const t=new DataView(i.buffer);t.setUint8(0,126),t.setUint16(1,n)}else{i=new Uint8Array(9);const t=new DataView(i.buffer);t.setUint8(0,127),t.setBigUint64(1,BigInt(n))}t.data&&"string"!=typeof t.data&&(i[0]|=128),e.enqueue(i),e.enqueue(s)}))}})}let w;function k(t){return t.reduce(((t,e)=>t+e.length),0)}function E(t,e){if(t[0].length===e)return t.shift();const s=new Uint8Array(e);let n=0;for(let i=0;i<e;i++)s[i]=t[0][n++],n===t[0].length&&(t.shift(),n=0);return t.length&&n<t[0].length&&(t[0]=t[0].slice(n)),s}function A(t){if(t)return function(t){for(var e in A.prototype)t[e]=A.prototype[e];return t}(t)}A.prototype.on=A.prototype.addEventListener=function(t,e){return this._callbacks=this._callbacks||{},(this._callbacks["$"+t]=this._callbacks["$"+t]||[]).push(e),this},A.prototype.once=function(t,e){function s(){this.off(t,s),e.apply(this,arguments)}return s.fn=e,this.on(t,s),this},A.prototype.off=A.prototype.removeListener=A.prototype.removeAllListeners=A.prototype.removeEventListener=function(t,e){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var s,n=this._callbacks["$"+t];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+t],this;for(var i=0;i<n.length;i++)if((s=n[i])===e||s.fn===e){n.splice(i,1);break}return 0===n.length&&delete this._callbacks["$"+t],this},A.prototype.emit=function(t){this._callbacks=this._callbacks||{};for(var e=new Array(arguments.length-1),s=this._callbacks["$"+t],n=1;n<arguments.length;n++)e[n-1]=arguments[n];if(s){n=0;for(var i=(s=s.slice(0)).length;n<i;++n)s[n].apply(this,e)}return this},A.prototype.emitReserved=A.prototype.emit,A.prototype.listeners=function(t){return this._callbacks=this._callbacks||{},this._callbacks["$"+t]||[]},A.prototype.hasListeners=function(t){return!!this.listeners(t).length};const T="function"==typeof Promise&&"function"==typeof Promise.resolve?t=>Promise.resolve().then(t):(t,e)=>e(t,0),O="undefined"!=typeof self?self:"undefined"!=typeof window?window:Function("return this")();function R(t,...e){return e.reduce(((e,s)=>(t.hasOwnProperty(s)&&(e[s]=t[s]),e)),{})}const C=O.setTimeout,B=O.clearTimeout;function x(t,e){e.useNativeTimers?(t.setTimeoutFn=C.bind(O),t.clearTimeoutFn=B.bind(O)):(t.setTimeoutFn=O.setTimeout.bind(O),t.clearTimeoutFn=O.clearTimeout.bind(O))}function S(){return Date.now().toString(36).substring(3)+Math.random().toString(36).substring(2,5)}class N extends Error{constructor(t,e,s){super(t),this.description=e,this.context=s,this.type="TransportError"}}class L extends A{constructor(t){super(),this.writable=!1,x(this,t),this.opts=t,this.query=t.query,this.socket=t.socket,this.supportsBinary=!t.forceBase64}onError(t,e,s){return super.emitReserved("error",new N(t,e,s)),this}open(){return this.readyState="opening",this.doOpen(),this}close(){return"opening"!==this.readyState&&"open"!==this.readyState||(this.doClose(),this.onClose()),this}send(t){"open"===this.readyState&&this.write(t)}onOpen(){this.readyState="open",this.writable=!0,super.emitReserved("open")}onData(t){const e=g(t,this.socket.binaryType);this.onPacket(e)}onPacket(t){super.emitReserved("packet",t)}onClose(t){this.readyState="closed",super.emitReserved("close",t)}pause(t){}createUri(t,e={}){return t+"://"+this._hostname()+this._port()+this.opts.path+this._query(e)}_hostname(){const t=this.opts.hostname;return-1===t.indexOf(":")?t:"["+t+"]"}_port(){return this.opts.port&&(this.opts.secure&&Number(443!==this.opts.port)||!this.opts.secure&&80!==Number(this.opts.port))?":"+this.opts.port:""}_query(t){const e=function(t){let e="";for(let s in t)t.hasOwnProperty(s)&&(e.length&&(e+="&"),e+=encodeURIComponent(s)+"="+encodeURIComponent(t[s]));return e}(t);return e.length?"?"+e:""}}class q extends L{constructor(){super(...arguments),this._polling=!1}get name(){return"polling"}doOpen(){this._poll()}pause(t){this.readyState="pausing";const e=()=>{this.readyState="paused",t()};if(this._polling||!this.writable){let t=0;this._polling&&(t++,this.once("pollComplete",(function(){--t||e()}))),this.writable||(t++,this.once("drain",(function(){--t||e()})))}else e()}_poll(){this._polling=!0,this.doPoll(),this.emitReserved("poll")}onData(t){((t,e)=>{const s=t.split(b),n=[];for(let t=0;t<s.length;t++){const i=g(s[t],e);if(n.push(i),"error"===i.type)break}return n})(t,this.socket.binaryType).forEach((t=>{if("opening"===this.readyState&&"open"===t.type&&this.onOpen(),"close"===t.type)return this.onClose({description:"transport closed by the server"}),!1;this.onPacket(t)})),"closed"!==this.readyState&&(this._polling=!1,this.emitReserved("pollComplete"),"open"===this.readyState&&this._poll())}doClose(){const t=()=>{this.write([{type:"close"}])};"open"===this.readyState?t():this.once("open",t)}write(t){this.writable=!1,((t,e)=>{const s=t.length,n=new Array(s);let i=0;t.forEach(((t,r)=>{c(t,!1,(t=>{n[r]=t,++i===s&&e(n.join(b))}))}))})(t,(t=>{this.doWrite(t,(()=>{this.writable=!0,this.emitReserved("drain")}))}))}uri(){const t=this.opts.secure?"https":"http",e=this.query||{};return!1!==this.opts.timestampRequests&&(e[this.opts.timestampParam]=S()),this.supportsBinary||e.sid||(e.b64=1),this.createUri(t,e)}}let P=!1;try{P="undefined"!=typeof XMLHttpRequest&&"withCredentials"in new XMLHttpRequest}catch(t){}const j=P;function D(){}class U extends q{constructor(t){if(super(t),"undefined"!=typeof location){const e="https:"===location.protocol;let s=location.port;s||(s=e?"443":"80"),this.xd="undefined"!=typeof location&&t.hostname!==location.hostname||s!==t.port}}doWrite(t,e){const s=this.request({method:"POST",data:t});s.on("success",e),s.on("error",((t,e)=>{this.onError("xhr post error",t,e)}))}doPoll(){const t=this.request();t.on("data",this.onData.bind(this)),t.on("error",((t,e)=>{this.onError("xhr poll error",t,e)})),this.pollXhr=t}}class I extends A{constructor(t,e,s){super(),this.createRequest=t,x(this,s),this._opts=s,this._method=s.method||"GET",this._uri=e,this._data=void 0!==s.data?s.data:null,this._create()}_create(){var t;const e=R(this._opts,"agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","autoUnref");e.xdomain=!!this._opts.xd;const s=this._xhr=this.createRequest(e);try{s.open(this._method,this._uri,!0);try{if(this._opts.extraHeaders){s.setDisableHeaderCheck&&s.setDisableHeaderCheck(!0);for(let t in this._opts.extraHeaders)this._opts.extraHeaders.hasOwnProperty(t)&&s.setRequestHeader(t,this._opts.extraHeaders[t])}}catch(t){}if("POST"===this._method)try{s.setRequestHeader("Content-type","text/plain;charset=UTF-8")}catch(t){}try{s.setRequestHeader("Accept","*/*")}catch(t){}null===(t=this._opts.cookieJar)||void 0===t||t.addCookies(s),"withCredentials"in s&&(s.withCredentials=this._opts.withCredentials),this._opts.requestTimeout&&(s.timeout=this._opts.requestTimeout),s.onreadystatechange=()=>{var t;3===s.readyState&&(null===(t=this._opts.cookieJar)||void 0===t||t.parseCookies(s.getResponseHeader("set-cookie"))),4===s.readyState&&(200===s.status||1223===s.status?this._onLoad():this.setTimeoutFn((()=>{this._onError("number"==typeof s.status?s.status:0)}),0))},s.send(this._data)}catch(t){return void this.setTimeoutFn((()=>{this._onError(t)}),0)}"undefined"!=typeof document&&(this._index=I.requestsCount++,I.requests[this._index]=this)}_onError(t){this.emitReserved("error",t,this._xhr),this._cleanup(!0)}_cleanup(t){if(void 0!==this._xhr&&null!==this._xhr){if(this._xhr.onreadystatechange=D,t)try{this._xhr.abort()}catch(t){}"undefined"!=typeof document&&delete I.requests[this._index],this._xhr=null}}_onLoad(){const t=this._xhr.responseText;null!==t&&(this.emitReserved("data",t),this.emitReserved("success"),this._cleanup())}abort(){this._cleanup()}}if(I.requestsCount=0,I.requests={},"undefined"!=typeof document)if("function"==typeof attachEvent)attachEvent("onunload",F);else if("function"==typeof addEventListener){addEventListener("onpagehide"in O?"pagehide":"unload",F,!1)}function F(){for(let t in I.requests)I.requests.hasOwnProperty(t)&&I.requests[t].abort()}const M=function(){const t=V({xdomain:!1});return t&&null!==t.responseType}();function V(t){const e=t.xdomain;try{if("undefined"!=typeof XMLHttpRequest&&(!e||j))return new XMLHttpRequest}catch(t){}if(!e)try{return new(O[["Active"].concat("Object").join("X")])("Microsoft.XMLHTTP")}catch(t){}}const H="undefined"!=typeof navigator&&"string"==typeof navigator.product&&"reactnative"===navigator.product.toLowerCase();class K extends L{get name(){return"websocket"}doOpen(){const t=this.uri(),e=this.opts.protocols,s=H?{}:R(this.opts,"agent","perMessageDeflate","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","localAddress","protocolVersion","origin","maxPayload","family","checkServerIdentity");this.opts.extraHeaders&&(s.headers=this.opts.extraHeaders);try{this.ws=this.createSocket(t,e,s)}catch(t){return this.emitReserved("error",t)}this.ws.binaryType=this.socket.binaryType,this.addEventListeners()}addEventListeners(){this.ws.onopen=()=>{this.opts.autoUnref&&this.ws._socket.unref(),this.onOpen()},this.ws.onclose=t=>this.onClose({description:"websocket connection closed",context:t}),this.ws.onmessage=t=>this.onData(t.data),this.ws.onerror=t=>this.onError("websocket error",t)}write(t){this.writable=!1;for(let e=0;e<t.length;e++){const s=t[e],n=e===t.length-1;c(s,this.supportsBinary,(t=>{try{this.doWrite(s,t)}catch(t){}n&&T((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){void 0!==this.ws&&(this.ws.onerror=()=>{},this.ws.close(),this.ws=null)}uri(){const t=this.opts.secure?"wss":"ws",e=this.query||{};return this.opts.timestampRequests&&(e[this.opts.timestampParam]=S()),this.supportsBinary||(e.b64=1),this.createUri(t,e)}}const W=O.WebSocket||O.MozWebSocket;const Y={websocket:class extends K{createSocket(t,e,s){return H?new W(t,e,s):e?new W(t,e):new W(t)}doWrite(t,e){this.ws.send(e)}},webtransport:class extends L{get name(){return"webtransport"}doOpen(){try{this._transport=new WebTransport(this.createUri("https"),this.opts.transportOptions[this.name])}catch(t){return this.emitReserved("error",t)}this._transport.closed.then((()=>{this.onClose()})).catch((t=>{this.onError("webtransport error",t)})),this._transport.ready.then((()=>{this._transport.createBidirectionalStream().then((t=>{const e=function(t,e){w||(w=new TextDecoder);const s=[];let n=0,i=-1,o=!1;return new TransformStream({transform(a,h){for(s.push(a);;){if(0===n){if(k(s)<1)break;const t=E(s,1);o=!(128&~t[0]),i=127&t[0],n=i<126?3:126===i?1:2}else if(1===n){if(k(s)<2)break;const t=E(s,2);i=new DataView(t.buffer,t.byteOffset,t.length).getUint16(0),n=3}else if(2===n){if(k(s)<8)break;const t=E(s,8),e=new DataView(t.buffer,t.byteOffset,t.length),o=e.getUint32(0);if(o>Math.pow(2,21)-1){h.enqueue(r);break}i=o*Math.pow(2,32)+e.getUint32(4),n=3}else{if(k(s)<i)break;const t=E(s,i);h.enqueue(g(o?t:w.decode(t),e)),n=0}if(0===i||i>t){h.enqueue(r);break}}}})}(Number.MAX_SAFE_INTEGER,this.socket.binaryType),s=t.readable.pipeThrough(e).getReader(),n=v();n.readable.pipeTo(t.writable),this._writer=n.writable.getWriter();const i=()=>{s.read().then((({done:t,value:e})=>{t||(this.onPacket(e),i())})).catch((t=>{}))};i();const o={type:"open"};this.query.sid&&(o.data=`{"sid":"${this.query.sid}"}`),this._writer.write(o).then((()=>this.onOpen()))}))}))}write(t){this.writable=!1;for(let e=0;e<t.length;e++){const s=t[e],n=e===t.length-1;this._writer.write(s).then((()=>{n&&T((()=>{this.writable=!0,this.emitReserved("drain")}),this.setTimeoutFn)}))}}doClose(){var t;null===(t=this._transport)||void 0===t||t.close()}},polling:class extends U{constructor(t){super(t);const e=t&&t.forceBase64;this.supportsBinary=M&&!e}request(t={}){return Object.assign(t,{xd:this.xd},this.opts),new I(V,this.uri(),t)}}},z=/^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,J=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"];function $(t){if(t.length>8e3)throw"URI too long";const e=t,s=t.indexOf("["),n=t.indexOf("]");-1!=s&&-1!=n&&(t=t.substring(0,s)+t.substring(s,n).replace(/:/g,";")+t.substring(n,t.length));let i=z.exec(t||""),r={},o=14;for(;o--;)r[J[o]]=i[o]||"";return-1!=s&&-1!=n&&(r.source=e,r.host=r.host.substring(1,r.host.length-1).replace(/;/g,":"),r.authority=r.authority.replace("[","").replace("]","").replace(/;/g,":"),r.ipv6uri=!0),r.pathNames=function(t,e){const s=/\/{2,9}/g,n=e.replace(s,"/").split("/");"/"!=e.slice(0,1)&&0!==e.length||n.splice(0,1);"/"==e.slice(-1)&&n.splice(n.length-1,1);return n}(0,r.path),r.queryKey=function(t,e){const s={};return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g,(function(t,e,n){e&&(s[e]=n)})),s}(0,r.query),r}const Q="function"==typeof addEventListener&&"function"==typeof removeEventListener,X=[];Q&&addEventListener("offline",(()=>{X.forEach((t=>t()))}),!1);class G extends A{constructor(t,e){if(super(),this.binaryType="arraybuffer",this.writeBuffer=[],this._prevBufferLen=0,this._pingInterval=-1,this._pingTimeout=-1,this._maxPayload=-1,this._pingTimeoutTime=1/0,t&&"object"==typeof t&&(e=t,t=null),t){const s=$(t);e.hostname=s.host,e.secure="https"===s.protocol||"wss"===s.protocol,e.port=s.port,s.query&&(e.query=s.query)}else e.host&&(e.hostname=$(e.host).host);x(this,e),this.secure=null!=e.secure?e.secure:"undefined"!=typeof location&&"https:"===location.protocol,e.hostname&&!e.port&&(e.port=this.secure?"443":"80"),this.hostname=e.hostname||("undefined"!=typeof location?location.hostname:"localhost"),this.port=e.port||("undefined"!=typeof location&&location.port?location.port:this.secure?"443":"80"),this.transports=[],this._transportsByName={},e.transports.forEach((t=>{const e=t.prototype.name;this.transports.push(e),this._transportsByName[e]=t})),this.opts=Object.assign({path:"/engine.io",agent:!1,withCredentials:!1,upgrade:!0,timestampParam:"t",rememberUpgrade:!1,addTrailingSlash:!0,rejectUnauthorized:!0,perMessageDeflate:{threshold:1024},transportOptions:{},closeOnBeforeunload:!1},e),this.opts.path=this.opts.path.replace(/\/$/,"")+(this.opts.addTrailingSlash?"/":""),"string"==typeof this.opts.query&&(this.opts.query=function(t){let e={},s=t.split("&");for(let t=0,n=s.length;t<n;t++){let n=s[t].split("=");e[decodeURIComponent(n[0])]=decodeURIComponent(n[1])}return e}(this.opts.query)),Q&&(this.opts.closeOnBeforeunload&&(this._beforeunloadEventListener=()=>{this.transport&&(this.transport.removeAllListeners(),this.transport.close())},addEventListener("beforeunload",this._beforeunloadEventListener,!1)),"localhost"!==this.hostname&&(this._offlineEventListener=()=>{this._onClose("transport close",{description:"network connection lost"})},X.push(this._offlineEventListener))),this.opts.withCredentials&&(this._cookieJar=void 0),this._open()}createTransport(t){const e=Object.assign({},this.opts.query);e.EIO=4,e.transport=t,this.id&&(e.sid=this.id);const s=Object.assign({},this.opts,{query:e,socket:this,hostname:this.hostname,secure:this.secure,port:this.port},this.opts.transportOptions[t]);return new this._transportsByName[t](s)}_open(){if(0===this.transports.length)return void this.setTimeoutFn((()=>{this.emitReserved("error","No transports available")}),0);const t=this.opts.rememberUpgrade&&G.priorWebsocketSuccess&&-1!==this.transports.indexOf("websocket")?"websocket":this.transports[0];this.readyState="opening";const e=this.createTransport(t);e.open(),this.setTransport(e)}setTransport(t){this.transport&&this.transport.removeAllListeners(),this.transport=t,t.on("drain",this._onDrain.bind(this)).on("packet",this._onPacket.bind(this)).on("error",this._onError.bind(this)).on("close",(t=>this._onClose("transport close",t)))}onOpen(){this.readyState="open",G.priorWebsocketSuccess="websocket"===this.transport.name,this.emitReserved("open"),this.flush()}_onPacket(t){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState)switch(this.emitReserved("packet",t),this.emitReserved("heartbeat"),t.type){case"open":this.onHandshake(JSON.parse(t.data));break;case"ping":this._sendPacket("pong"),this.emitReserved("ping"),this.emitReserved("pong"),this._resetPingTimeout();break;case"error":const e=new Error("server error");e.code=t.data,this._onError(e);break;case"message":this.emitReserved("data",t.data),this.emitReserved("message",t.data)}}onHandshake(t){this.emitReserved("handshake",t),this.id=t.sid,this.transport.query.sid=t.sid,this._pingInterval=t.pingInterval,this._pingTimeout=t.pingTimeout,this._maxPayload=t.maxPayload,this.onOpen(),"closed"!==this.readyState&&this._resetPingTimeout()}_resetPingTimeout(){this.clearTimeoutFn(this._pingTimeoutTimer);const t=this._pingInterval+this._pingTimeout;this._pingTimeoutTime=Date.now()+t,this._pingTimeoutTimer=this.setTimeoutFn((()=>{this._onClose("ping timeout")}),t),this.opts.autoUnref&&this._pingTimeoutTimer.unref()}_onDrain(){this.writeBuffer.splice(0,this._prevBufferLen),this._prevBufferLen=0,0===this.writeBuffer.length?this.emitReserved("drain"):this.flush()}flush(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){const t=this._getWritablePackets();this.transport.send(t),this._prevBufferLen=t.length,this.emitReserved("flush")}}_getWritablePackets(){if(!(this._maxPayload&&"polling"===this.transport.name&&this.writeBuffer.length>1))return this.writeBuffer;let t=1;for(let s=0;s<this.writeBuffer.length;s++){const n=this.writeBuffer[s].data;if(n&&(t+="string"==typeof(e=n)?function(t){let e=0,s=0;for(let n=0,i=t.length;n<i;n++)e=t.charCodeAt(n),e<128?s+=1:e<2048?s+=2:e<55296||e>=57344?s+=3:(n++,s+=4);return s}(e):Math.ceil(1.33*(e.byteLength||e.size))),s>0&&t>this._maxPayload)return this.writeBuffer.slice(0,s);t+=2}var e;return this.writeBuffer}_hasPingExpired(){if(!this._pingTimeoutTime)return!0;const t=Date.now()>this._pingTimeoutTime;return t&&(this._pingTimeoutTime=0,T((()=>{this._onClose("ping timeout")}),this.setTimeoutFn)),t}write(t,e,s){return this._sendPacket("message",t,e,s),this}send(t,e,s){return this._sendPacket("message",t,e,s),this}_sendPacket(t,e,s,n){if("function"==typeof e&&(n=e,e=void 0),"function"==typeof s&&(n=s,s=null),"closing"===this.readyState||"closed"===this.readyState)return;(s=s||{}).compress=!1!==s.compress;const i={type:t,data:e,options:s};this.emitReserved("packetCreate",i),this.writeBuffer.push(i),n&&this.once("flush",n),this.flush()}close(){const t=()=>{this._onClose("forced close"),this.transport.close()},e=()=>{this.off("upgrade",e),this.off("upgradeError",e),t()},s=()=>{this.once("upgrade",e),this.once("upgradeError",e)};return"opening"!==this.readyState&&"open"!==this.readyState||(this.readyState="closing",this.writeBuffer.length?this.once("drain",(()=>{this.upgrading?s():t()})):this.upgrading?s():t()),this}_onError(t){if(G.priorWebsocketSuccess=!1,this.opts.tryAllTransports&&this.transports.length>1&&"opening"===this.readyState)return this.transports.shift(),this._open();this.emitReserved("error",t),this._onClose("transport error",t)}_onClose(t,e){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){if(this.clearTimeoutFn(this._pingTimeoutTimer),this.transport.removeAllListeners("close"),this.transport.close(),this.transport.removeAllListeners(),Q&&(this._beforeunloadEventListener&&removeEventListener("beforeunload",this._beforeunloadEventListener,!1),this._offlineEventListener)){const t=X.indexOf(this._offlineEventListener);-1!==t&&X.splice(t,1)}this.readyState="closed",this.id=null,this.emitReserved("close",t,e),this.writeBuffer=[],this._prevBufferLen=0}}}G.protocol=4;class Z extends G{constructor(){super(...arguments),this._upgrades=[]}onOpen(){if(super.onOpen(),"open"===this.readyState&&this.opts.upgrade)for(let t=0;t<this._upgrades.length;t++)this._probe(this._upgrades[t])}_probe(t){let e=this.createTransport(t),s=!1;G.priorWebsocketSuccess=!1;const n=()=>{s||(e.send([{type:"ping",data:"probe"}]),e.once("packet",(t=>{if(!s)if("pong"===t.type&&"probe"===t.data){if(this.upgrading=!0,this.emitReserved("upgrading",e),!e)return;G.priorWebsocketSuccess="websocket"===e.name,this.transport.pause((()=>{s||"closed"!==this.readyState&&(c(),this.setTransport(e),e.send([{type:"upgrade"}]),this.emitReserved("upgrade",e),e=null,this.upgrading=!1,this.flush())}))}else{const t=new Error("probe error");t.transport=e.name,this.emitReserved("upgradeError",t)}})))};function i(){s||(s=!0,c(),e.close(),e=null)}const r=t=>{const s=new Error("probe error: "+t);s.transport=e.name,i(),this.emitReserved("upgradeError",s)};function o(){r("transport closed")}function a(){r("socket closed")}function h(t){e&&t.name!==e.name&&i()}const c=()=>{e.removeListener("open",n),e.removeListener("error",r),e.removeListener("close",o),this.off("close",a),this.off("upgrading",h)};e.once("open",n),e.once("error",r),e.once("close",o),this.once("close",a),this.once("upgrading",h),-1!==this._upgrades.indexOf("webtransport")&&"webtransport"!==t?this.setTimeoutFn((()=>{s||e.open()}),200):e.open()}onHandshake(t){this._upgrades=this._filterUpgrades(t.upgrades),super.onHandshake(t)}_filterUpgrades(t){const e=[];for(let s=0;s<t.length;s++)~this.transports.indexOf(t[s])&&e.push(t[s]);return e}}let tt=class extends Z{constructor(t,e={}){const s="object"==typeof t?t:e;(!s.transports||s.transports&&"string"==typeof s.transports[0])&&(s.transports=(s.transports||["polling","websocket","webtransport"]).map((t=>Y[t])).filter((t=>!!t))),super(t,s)}};const et="function"==typeof ArrayBuffer,st=Object.prototype.toString,nt="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===st.call(Blob),it="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===st.call(File);function rt(t){return et&&(t instanceof ArrayBuffer||(t=>"function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):t.buffer instanceof ArrayBuffer)(t))||nt&&t instanceof Blob||it&&t instanceof File}function ot(t,e){if(!t||"object"!=typeof t)return!1;if(Array.isArray(t)){for(let e=0,s=t.length;e<s;e++)if(ot(t[e]))return!0;return!1}if(rt(t))return!0;if(t.toJSON&&"function"==typeof t.toJSON&&1===arguments.length)return ot(t.toJSON(),!0);for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&ot(t[e]))return!0;return!1}function at(t){const e=[],s=t.data,n=t;return n.data=ht(s,e),n.attachments=e.length,{packet:n,buffers:e}}function ht(t,e){if(!t)return t;if(rt(t)){const s={_placeholder:!0,num:e.length};return e.push(t),s}if(Array.isArray(t)){const s=new Array(t.length);for(let n=0;n<t.length;n++)s[n]=ht(t[n],e);return s}if("object"==typeof t&&!(t instanceof Date)){const s={};for(const n in t)Object.prototype.hasOwnProperty.call(t,n)&&(s[n]=ht(t[n],e));return s}return t}function ct(t,e){return t.data=pt(t.data,e),delete t.attachments,t}function pt(t,e){if(!t)return t;if(t&&!0===t._placeholder){if("number"==typeof t.num&&t.num>=0&&t.num<e.length)return e[t.num];throw new Error("illegal attachments")}if(Array.isArray(t))for(let s=0;s<t.length;s++)t[s]=pt(t[s],e);else if("object"==typeof t)for(const s in t)Object.prototype.hasOwnProperty.call(t,s)&&(t[s]=pt(t[s],e));return t}const ut=["connect","connect_error","disconnect","disconnecting","newListener","removeListener"];var dt;!function(t){t[t.CONNECT=0]="CONNECT",t[t.DISCONNECT=1]="DISCONNECT",t[t.EVENT=2]="EVENT",t[t.ACK=3]="ACK",t[t.CONNECT_ERROR=4]="CONNECT_ERROR",t[t.BINARY_EVENT=5]="BINARY_EVENT",t[t.BINARY_ACK=6]="BINARY_ACK"}(dt||(dt={}));function lt(t){return"[object Object]"===Object.prototype.toString.call(t)}class ft extends A{constructor(t){super(),this.reviver=t}add(t){let e;if("string"==typeof t){if(this.reconstructor)throw new Error("got plaintext data when reconstructing a packet");e=this.decodeString(t);const s=e.type===dt.BINARY_EVENT;s||e.type===dt.BINARY_ACK?(e.type=s?dt.EVENT:dt.ACK,this.reconstructor=new yt(e),0===e.attachments&&super.emitReserved("decoded",e)):super.emitReserved("decoded",e)}else{if(!rt(t)&&!t.base64)throw new Error("Unknown type: "+t);if(!this.reconstructor)throw new Error("got binary data when not reconstructing a packet");e=this.reconstructor.takeBinaryData(t),e&&(this.reconstructor=null,super.emitReserved("decoded",e))}}decodeString(t){let e=0;const s={type:Number(t.charAt(0))};if(void 0===dt[s.type])throw new Error("unknown packet type "+s.type);if(s.type===dt.BINARY_EVENT||s.type===dt.BINARY_ACK){const n=e+1;for(;"-"!==t.charAt(++e)&&e!=t.length;);const i=t.substring(n,e);if(i!=Number(i)||"-"!==t.charAt(e))throw new Error("Illegal attachments");s.attachments=Number(i)}if("/"===t.charAt(e+1)){const n=e+1;for(;++e;){if(","===t.charAt(e))break;if(e===t.length)break}s.nsp=t.substring(n,e)}else s.nsp="/";const n=t.charAt(e+1);if(""!==n&&Number(n)==n){const n=e+1;for(;++e;){const s=t.charAt(e);if(null==s||Number(s)!=s){--e;break}if(e===t.length)break}s.id=Number(t.substring(n,e+1))}if(t.charAt(++e)){const n=this.tryParse(t.substr(e));if(!ft.isPayloadValid(s.type,n))throw new Error("invalid payload");s.data=n}return s}tryParse(t){try{return JSON.parse(t,this.reviver)}catch(t){return!1}}static isPayloadValid(t,e){switch(t){case dt.CONNECT:return lt(e);case dt.DISCONNECT:return void 0===e;case dt.CONNECT_ERROR:return"string"==typeof e||lt(e);case dt.EVENT:case dt.BINARY_EVENT:return Array.isArray(e)&&("number"==typeof e[0]||"string"==typeof e[0]&&-1===ut.indexOf(e[0]));case dt.ACK:case dt.BINARY_ACK:return Array.isArray(e)}}destroy(){this.reconstructor&&(this.reconstructor.finishedReconstruction(),this.reconstructor=null)}}class yt{constructor(t){this.packet=t,this.buffers=[],this.reconPack=t}takeBinaryData(t){if(this.buffers.push(t),this.buffers.length===this.reconPack.attachments){const t=ct(this.reconPack,this.buffers);return this.finishedReconstruction(),t}return null}finishedReconstruction(){this.reconPack=null,this.buffers=[]}}var gt=Object.freeze({__proto__:null,Decoder:ft,Encoder:class{constructor(t){this.replacer=t}encode(t){return t.type!==dt.EVENT&&t.type!==dt.ACK||!ot(t)?[this.encodeAsString(t)]:this.encodeAsBinary({type:t.type===dt.EVENT?dt.BINARY_EVENT:dt.BINARY_ACK,nsp:t.nsp,data:t.data,id:t.id})}encodeAsString(t){let e=""+t.type;return t.type!==dt.BINARY_EVENT&&t.type!==dt.BINARY_ACK||(e+=t.attachments+"-"),t.nsp&&"/"!==t.nsp&&(e+=t.nsp+","),null!=t.id&&(e+=t.id),null!=t.data&&(e+=JSON.stringify(t.data,this.replacer)),e}encodeAsBinary(t){const e=at(t),s=this.encodeAsString(e.packet),n=e.buffers;return n.unshift(s),n}},get PacketType(){return dt},protocol:5});function mt(t,e,s){return t.on(e,s),function(){t.off(e,s)}}const _t=Object.freeze({connect:1,connect_error:1,disconnect:1,disconnecting:1,newListener:1,removeListener:1});class bt extends A{constructor(t,e,s){super(),this.connected=!1,this.recovered=!1,this.receiveBuffer=[],this.sendBuffer=[],this._queue=[],this._queueSeq=0,this.ids=0,this.acks={},this.flags={},this.io=t,this.nsp=e,s&&s.auth&&(this.auth=s.auth),this._opts=Object.assign({},s),this.io._autoConnect&&this.open()}get disconnected(){return!this.connected}subEvents(){if(this.subs)return;const t=this.io;this.subs=[mt(t,"open",this.onopen.bind(this)),mt(t,"packet",this.onpacket.bind(this)),mt(t,"error",this.onerror.bind(this)),mt(t,"close",this.onclose.bind(this))]}get active(){return!!this.subs}connect(){return this.connected||(this.subEvents(),this.io._reconnecting||this.io.open(),"open"===this.io._readyState&&this.onopen()),this}open(){return this.connect()}send(...t){return t.unshift("message"),this.emit.apply(this,t),this}emit(t,...e){var s,n,i;if(_t.hasOwnProperty(t))throw new Error('"'+t.toString()+'" is a reserved event name');if(e.unshift(t),this._opts.retries&&!this.flags.fromQueue&&!this.flags.volatile)return this._addToQueue(e),this;const r={type:dt.EVENT,data:e,options:{}};if(r.options.compress=!1!==this.flags.compress,"function"==typeof e[e.length-1]){const t=this.ids++,s=e.pop();this._registerAckCallback(t,s),r.id=t}const o=null===(n=null===(s=this.io.engine)||void 0===s?void 0:s.transport)||void 0===n?void 0:n.writable,a=this.connected&&!(null===(i=this.io.engine)||void 0===i?void 0:i._hasPingExpired());return this.flags.volatile&&!o||(a?(this.notifyOutgoingListeners(r),this.packet(r)):this.sendBuffer.push(r)),this.flags={},this}_registerAckCallback(t,e){var s;const n=null!==(s=this.flags.timeout)&&void 0!==s?s:this._opts.ackTimeout;if(void 0===n)return void(this.acks[t]=e);const i=this.io.setTimeoutFn((()=>{delete this.acks[t];for(let e=0;e<this.sendBuffer.length;e++)this.sendBuffer[e].id===t&&this.sendBuffer.splice(e,1);e.call(this,new Error("operation has timed out"))}),n),r=(...t)=>{this.io.clearTimeoutFn(i),e.apply(this,t)};r.withError=!0,this.acks[t]=r}emitWithAck(t,...e){return new Promise(((s,n)=>{const i=(t,e)=>t?n(t):s(e);i.withError=!0,e.push(i),this.emit(t,...e)}))}_addToQueue(t){let e;"function"==typeof t[t.length-1]&&(e=t.pop());const s={id:this._queueSeq++,tryCount:0,pending:!1,args:t,flags:Object.assign({fromQueue:!0},this.flags)};t.push(((t,...n)=>{if(s!==this._queue[0])return;return null!==t?s.tryCount>this._opts.retries&&(this._queue.shift(),e&&e(t)):(this._queue.shift(),e&&e(null,...n)),s.pending=!1,this._drainQueue()})),this._queue.push(s),this._drainQueue()}_drainQueue(t=!1){if(!this.connected||0===this._queue.length)return;const e=this._queue[0];e.pending&&!t||(e.pending=!0,e.tryCount++,this.flags=e.flags,this.emit.apply(this,e.args))}packet(t){t.nsp=this.nsp,this.io._packet(t)}onopen(){"function"==typeof this.auth?this.auth((t=>{this._sendConnectPacket(t)})):this._sendConnectPacket(this.auth)}_sendConnectPacket(t){this.packet({type:dt.CONNECT,data:this._pid?Object.assign({pid:this._pid,offset:this._lastOffset},t):t})}onerror(t){this.connected||this.emitReserved("connect_error",t)}onclose(t,e){this.connected=!1,delete this.id,this.emitReserved("disconnect",t,e),this._clearAcks()}_clearAcks(){Object.keys(this.acks).forEach((t=>{if(!this.sendBuffer.some((e=>String(e.id)===t))){const e=this.acks[t];delete this.acks[t],e.withError&&e.call(this,new Error("socket has been disconnected"))}}))}onpacket(t){if(t.nsp===this.nsp)switch(t.type){case dt.CONNECT:t.data&&t.data.sid?this.onconnect(t.data.sid,t.data.pid):this.emitReserved("connect_error",new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));break;case dt.EVENT:case dt.BINARY_EVENT:this.onevent(t);break;case dt.ACK:case dt.BINARY_ACK:this.onack(t);break;case dt.DISCONNECT:this.ondisconnect();break;case dt.CONNECT_ERROR:this.destroy();const e=new Error(t.data.message);e.data=t.data.data,this.emitReserved("connect_error",e)}}onevent(t){const e=t.data||[];null!=t.id&&e.push(this.ack(t.id)),this.connected?this.emitEvent(e):this.receiveBuffer.push(Object.freeze(e))}emitEvent(t){if(this._anyListeners&&this._anyListeners.length){const e=this._anyListeners.slice();for(const s of e)s.apply(this,t)}super.emit.apply(this,t),this._pid&&t.length&&"string"==typeof t[t.length-1]&&(this._lastOffset=t[t.length-1])}ack(t){const e=this;let s=!1;return function(...n){s||(s=!0,e.packet({type:dt.ACK,id:t,data:n}))}}onack(t){const e=this.acks[t.id];"function"==typeof e&&(delete this.acks[t.id],e.withError&&t.data.unshift(null),e.apply(this,t.data))}onconnect(t,e){this.id=t,this.recovered=e&&this._pid===e,this._pid=e,this.connected=!0,this.emitBuffered(),this.emitReserved("connect"),this._drainQueue(!0)}emitBuffered(){this.receiveBuffer.forEach((t=>this.emitEvent(t))),this.receiveBuffer=[],this.sendBuffer.forEach((t=>{this.notifyOutgoingListeners(t),this.packet(t)})),this.sendBuffer=[]}ondisconnect(){this.destroy(),this.onclose("io server disconnect")}destroy(){this.subs&&(this.subs.forEach((t=>t())),this.subs=void 0),this.io._destroy(this)}disconnect(){return this.connected&&this.packet({type:dt.DISCONNECT}),this.destroy(),this.connected&&this.onclose("io client disconnect"),this}close(){return this.disconnect()}compress(t){return this.flags.compress=t,this}get volatile(){return this.flags.volatile=!0,this}timeout(t){return this.flags.timeout=t,this}onAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.push(t),this}prependAny(t){return this._anyListeners=this._anyListeners||[],this._anyListeners.unshift(t),this}offAny(t){if(!this._anyListeners)return this;if(t){const e=this._anyListeners;for(let s=0;s<e.length;s++)if(t===e[s])return e.splice(s,1),this}else this._anyListeners=[];return this}listenersAny(){return this._anyListeners||[]}onAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.push(t),this}prependAnyOutgoing(t){return this._anyOutgoingListeners=this._anyOutgoingListeners||[],this._anyOutgoingListeners.unshift(t),this}offAnyOutgoing(t){if(!this._anyOutgoingListeners)return this;if(t){const e=this._anyOutgoingListeners;for(let s=0;s<e.length;s++)if(t===e[s])return e.splice(s,1),this}else this._anyOutgoingListeners=[];return this}listenersAnyOutgoing(){return this._anyOutgoingListeners||[]}notifyOutgoingListeners(t){if(this._anyOutgoingListeners&&this._anyOutgoingListeners.length){const e=this._anyOutgoingListeners.slice();for(const s of e)s.apply(this,t.data)}}}function vt(t){t=t||{},this.ms=t.min||100,this.max=t.max||1e4,this.factor=t.factor||2,this.jitter=t.jitter>0&&t.jitter<=1?t.jitter:0,this.attempts=0}vt.prototype.duration=function(){var t=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var e=Math.random(),s=Math.floor(e*this.jitter*t);t=1&Math.floor(10*e)?t+s:t-s}return 0|Math.min(t,this.max)},vt.prototype.reset=function(){this.attempts=0},vt.prototype.setMin=function(t){this.ms=t},vt.prototype.setMax=function(t){this.max=t},vt.prototype.setJitter=function(t){this.jitter=t};class wt extends A{constructor(t,e){var s;super(),this.nsps={},this.subs=[],t&&"object"==typeof t&&(e=t,t=void 0),(e=e||{}).path=e.path||"/socket.io",this.opts=e,x(this,e),this.reconnection(!1!==e.reconnection),this.reconnectionAttempts(e.reconnectionAttempts||1/0),this.reconnectionDelay(e.reconnectionDelay||1e3),this.reconnectionDelayMax(e.reconnectionDelayMax||5e3),this.randomizationFactor(null!==(s=e.randomizationFactor)&&void 0!==s?s:.5),this.backoff=new vt({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()}),this.timeout(null==e.timeout?2e4:e.timeout),this._readyState="closed",this.uri=t;const n=e.parser||gt;this.encoder=new n.Encoder,this.decoder=new n.Decoder,this._autoConnect=!1!==e.autoConnect,this._autoConnect&&this.open()}reconnection(t){return arguments.length?(this._reconnection=!!t,t||(this.skipReconnect=!0),this):this._reconnection}reconnectionAttempts(t){return void 0===t?this._reconnectionAttempts:(this._reconnectionAttempts=t,this)}reconnectionDelay(t){var e;return void 0===t?this._reconnectionDelay:(this._reconnectionDelay=t,null===(e=this.backoff)||void 0===e||e.setMin(t),this)}randomizationFactor(t){var e;return void 0===t?this._randomizationFactor:(this._randomizationFactor=t,null===(e=this.backoff)||void 0===e||e.setJitter(t),this)}reconnectionDelayMax(t){var e;return void 0===t?this._reconnectionDelayMax:(this._reconnectionDelayMax=t,null===(e=this.backoff)||void 0===e||e.setMax(t),this)}timeout(t){return arguments.length?(this._timeout=t,this):this._timeout}maybeReconnectOnOpen(){!this._reconnecting&&this._reconnection&&0===this.backoff.attempts&&this.reconnect()}open(t){if(~this._readyState.indexOf("open"))return this;this.engine=new tt(this.uri,this.opts);const e=this.engine,s=this;this._readyState="opening",this.skipReconnect=!1;const n=mt(e,"open",(function(){s.onopen(),t&&t()})),i=e=>{this.cleanup(),this._readyState="closed",this.emitReserved("error",e),t?t(e):this.maybeReconnectOnOpen()},r=mt(e,"error",i);if(!1!==this._timeout){const t=this._timeout,s=this.setTimeoutFn((()=>{n(),i(new Error("timeout")),e.close()}),t);this.opts.autoUnref&&s.unref(),this.subs.push((()=>{this.clearTimeoutFn(s)}))}return this.subs.push(n),this.subs.push(r),this}connect(t){return this.open(t)}onopen(){this.cleanup(),this._readyState="open",this.emitReserved("open");const t=this.engine;this.subs.push(mt(t,"ping",this.onping.bind(this)),mt(t,"data",this.ondata.bind(this)),mt(t,"error",this.onerror.bind(this)),mt(t,"close",this.onclose.bind(this)),mt(this.decoder,"decoded",this.ondecoded.bind(this)))}onping(){this.emitReserved("ping")}ondata(t){try{this.decoder.add(t)}catch(t){this.onclose("parse error",t)}}ondecoded(t){T((()=>{this.emitReserved("packet",t)}),this.setTimeoutFn)}onerror(t){this.emitReserved("error",t)}socket(t,e){let s=this.nsps[t];return s?this._autoConnect&&!s.active&&s.connect():(s=new bt(this,t,e),this.nsps[t]=s),s}_destroy(t){const e=Object.keys(this.nsps);for(const t of e){if(this.nsps[t].active)return}this._close()}_packet(t){const e=this.encoder.encode(t);for(let s=0;s<e.length;s++)this.engine.write(e[s],t.options)}cleanup(){this.subs.forEach((t=>t())),this.subs.length=0,this.decoder.destroy()}_close(){this.skipReconnect=!0,this._reconnecting=!1,this.onclose("forced close")}disconnect(){return this._close()}onclose(t,e){var s;this.cleanup(),null===(s=this.engine)||void 0===s||s.close(),this.backoff.reset(),this._readyState="closed",this.emitReserved("close",t,e),this._reconnection&&!this.skipReconnect&&this.reconnect()}reconnect(){if(this._reconnecting||this.skipReconnect)return this;const t=this;if(this.backoff.attempts>=this._reconnectionAttempts)this.backoff.reset(),this.emitReserved("reconnect_failed"),this._reconnecting=!1;else{const e=this.backoff.duration();this._reconnecting=!0;const s=this.setTimeoutFn((()=>{t.skipReconnect||(this.emitReserved("reconnect_attempt",t.backoff.attempts),t.skipReconnect||t.open((e=>{e?(t._reconnecting=!1,t.reconnect(),this.emitReserved("reconnect_error",e)):t.onreconnect()})))}),e);this.opts.autoUnref&&s.unref(),this.subs.push((()=>{this.clearTimeoutFn(s)}))}}onreconnect(){const t=this.backoff.attempts;this._reconnecting=!1,this.backoff.reset(),this.emitReserved("reconnect",t)}}const kt={};function Et(t,e){"object"==typeof t&&(e=t,t=void 0);const s=function(t,e="",s){let n=t;s=s||"undefined"!=typeof location&&location,null==t&&(t=s.protocol+"//"+s.host),"string"==typeof t&&("/"===t.charAt(0)&&(t="/"===t.charAt(1)?s.protocol+t:s.host+t),/^(https?|wss?):\/\//.test(t)||(t=void 0!==s?s.protocol+"//"+t:"https://"+t),n=$(t)),n.port||(/^(http|ws)$/.test(n.protocol)?n.port="80":/^(http|ws)s$/.test(n.protocol)&&(n.port="443")),n.path=n.path||"/";const i=-1!==n.host.indexOf(":")?"["+n.host+"]":n.host;return n.id=n.protocol+"://"+i+":"+n.port+e,n.href=n.protocol+"://"+i+(s&&s.port===n.port?"":":"+n.port),n}(t,(e=e||{}).path||"/socket.io"),n=s.source,i=s.id,r=s.path,o=kt[i]&&r in kt[i].nsps;let a;return e.forceNew||e["force new connection"]||!1===e.multiplex||o?a=new wt(n,e):(kt[i]||(kt[i]=new wt(n,e)),a=kt[i]),s.query&&!e.query&&(e.query=s.queryKey),a.socket(s.path,e)}Object.assign(Et,{Manager:wt,Socket:bt,io:Et,connect:Et});const At="x-api-token";class Tt extends EventTarget{get connected(){var t,e;return null!==(e=null===(t=this.socket)||void 0===t?void 0:t.connected)&&void 0!==e&&e}constructor(t){super(),this.token=t,this.socket=null}close(){this.socket&&this.socket.connected&&(this.socket.removeAllListeners(),this.socket.close())}listen(t,e,s){var n,i;if(this.socket&&this.socket.connected&&(this.socket.removeAllListeners(),this.socket.close()),0===t.length)throw new Error("At least one event type must be provided");this.socket=Et(`https://realtime.jsonpad.io?${new URLSearchParams({eventTypes:t.join(","),listIds:null!==(n=null==e?void 0:e.join(","))&&void 0!==n?n:"",itemIds:null!==(i=null==s?void 0:s.join(","))&&void 0!==i?i:""})}`,{extraHeaders:{[At]:this.token}}),this.socket.on("connect",this.handleConnected.bind(this)),this.socket.on("disconnect",this.handleDisconnected.bind(this)),this.socket.on("error",this.handleError.bind(this)),this.socket.on("list-created",this.handleEvent.bind(this,"list-created")),this.socket.on("list-updated",this.handleEvent.bind(this,"list-updated")),this.socket.on("list-deleted",this.handleEvent.bind(this,"list-deleted")),this.socket.on("item-created",this.handleEvent.bind(this,"item-created")),this.socket.on("item-updated",this.handleEvent.bind(this,"item-updated")),this.socket.on("item-restored",this.handleEvent.bind(this,"item-restored")),this.socket.on("item-deleted",this.handleEvent.bind(this,"item-deleted"))}handleConnected(){this.dispatchEvent(Tt.connected)}handleDisconnected(){this.dispatchEvent(Tt.disconnected)}handleError(t){this.dispatchEvent(new CustomEvent("error",{detail:t}))}handleEvent(t,n){let i;try{i=JSON.parse(n)}catch(t){return void this.handleError("Failed to parse data")}switch(t){case"list-created":this.dispatchEvent(new s("list-created",i));break;case"list-updated":this.dispatchEvent(new s("list-updated",i));break;case"list-deleted":this.dispatchEvent(new s("list-deleted",i));break;case"item-created":this.dispatchEvent(new e("item-created",i));break;case"item-updated":this.dispatchEvent(new e("item-updated",i));break;case"item-restored":this.dispatchEvent(new e("item-restored",i));break;case"item-deleted":this.dispatchEvent(new e("item-deleted",i))}}}Tt.connected=new Event("connected"),Tt.disconnected=new Event("disconnected"),t.ItemEvent=e,t.ListEvent=s,t.default=Tt,Object.defineProperty(t,"__esModule",{value:!0})}));


/***/ }),

/***/ "./node_modules/@basementuniverse/jsonpad-sdk/build/jsonpad-sdk.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@basementuniverse/jsonpad-sdk/build/jsonpad-sdk.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

!function(t,i){ true?i(exports):0}(this,(function(t){"use strict";class i{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),lastActiveAt:t.lastActiveAt?new Date(t.lastActiveAt):null})}}class e{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:t.user?new i(t.user):void 0})}}class n{constructor(t){this.lastLoginAt=null,Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:t.user?new i(t.user):void 0,lastLoginAt:t.lastLoginAt?new Date(t.lastLoginAt):null})}}class o{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt)})}}class s{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt)})}}class d{constructor(t){Object.assign(this,{...t,createdAt:new Date(t.createdAt),updatedAt:new Date(t.updatedAt),user:t.user?new i(t.user):void 0})}}function a(t,...i){return Object.fromEntries(Object.entries(t).filter((([t])=>!i.includes(t))))}const l="x-api-token";async function r(t,i,e,n,o,s,d){const a=n?new URLSearchParams({...Object.fromEntries(Object.entries(n).map((([t,i])=>[t,i.toString()])))}):"",r={[l]:t,"Content-Type":"application/json"};s&&(r["x-identity-group"]=s),d&&(r["x-identity-token"]=d);const u=await fetch(`https://api.jsonpad.io${e}?${a}`,{method:i,headers:r,body:o?JSON.stringify(o):void 0});if(!u.ok)throw new Error(await u.text());return 204===u.status?null:await u.json()}t.Event=e,t.Index=o,t.Item=s,t.List=d,t.User=i,t.default=class{constructor(t,i,e){this.token=t,this.identityGroup=i,this.identityToken=e}async createList(t){return new d(await r(this.token,"POST","/lists",void 0,t))}async fetchLists(t){const i=await r(this.token,"GET","/lists",t);return{...i,data:i.data.map((t=>new d(t)))}}async fetchList(t){return new d(await r(this.token,"GET",`/lists/${t}`))}async searchList(t,i,e){return(await r(this.token,"GET",`/lists/${t}/search`,{query:i,...e})).map((t=>"item"in t?{relevance:t.relevance,item:new s(t.item)}:t))}async fetchListStats(t,i){return await r(this.token,"GET",`/lists/${t}/stats`,i)}async fetchListEvents(t,i){const n=await r(this.token,"GET",`/lists/${t}/events`,i);return{...n,data:n.data.map((t=>new e(t)))}}async fetchListEvent(t,i){return new e(await r(this.token,"GET",`/lists/${t}/events/${i}`))}async updateList(t,i){return new d(await r(this.token,"PUT",`/lists/${t}`,void 0,i))}async deleteList(t){await r(this.token,"DELETE",`/lists/${t}`)}async createItem(t,i,e,n){var o,d;return new s(await r(this.token,"POST",`/lists/${t}/items`,e,i,(null==n?void 0:n.ignore)?void 0:null!==(o=null==n?void 0:n.group)&&void 0!==o?o:this.identityGroup,(null==n?void 0:n.ignore)?void 0:null!==(d=null==n?void 0:n.token)&&void 0!==d?d:this.identityToken))}async fetchItems(t,i,e){var n,o;const d=await r(this.token,"GET",`/lists/${t}/items`,i,void 0,(null==e?void 0:e.ignore)?void 0:null!==(n=null==e?void 0:e.group)&&void 0!==n?n:this.identityGroup,(null==e?void 0:e.ignore)?void 0:null!==(o=null==e?void 0:e.token)&&void 0!==o?o:this.identityToken);return{...d,data:d.data.map((t=>new s(t)))}}async fetchItemsData(t,i,e){var n,o;const s=(null==i?void 0:i.pointer)?`/${i.pointer}`:"";return await r(this.token,"GET",`/lists/${t}/items/data${s}`,i?a(i,"pointer"):void 0,void 0,(null==e?void 0:e.ignore)?void 0:null!==(n=null==e?void 0:e.group)&&void 0!==n?n:this.identityGroup,(null==e?void 0:e.ignore)?void 0:null!==(o=null==e?void 0:e.token)&&void 0!==o?o:this.identityToken)}async fetchItem(t,i,e,n){var o,d;return new s(await r(this.token,"GET",`/lists/${t}/items/${i}`,e,void 0,(null==n?void 0:n.ignore)?void 0:null!==(o=null==n?void 0:n.group)&&void 0!==o?o:this.identityGroup,(null==n?void 0:n.ignore)?void 0:null!==(d=null==n?void 0:n.token)&&void 0!==d?d:this.identityToken))}async fetchItemData(t,i,e,n){var o,s;const d=(null==e?void 0:e.pointer)?`/${e.pointer}`:"";return await r(this.token,"GET",`/lists/${t}/items/${i}/data${d}`,e?a(e,"pointer"):void 0,void 0,(null==n?void 0:n.ignore)?void 0:null!==(o=null==n?void 0:n.group)&&void 0!==o?o:this.identityGroup,(null==n?void 0:n.ignore)?void 0:null!==(s=null==n?void 0:n.token)&&void 0!==s?s:this.identityToken)}async fetchItemStats(t,i,e){return await r(this.token,"GET",`/lists/${t}/items/${i}/stats`,e)}async fetchItemEvents(t,i,n){const o=await r(this.token,"GET",`/lists/${t}/items/${i}/events`,n);return{...o,data:o.data.map((t=>new e(t)))}}async fetchItemEvent(t,i,n){return new e(await r(this.token,"GET",`/lists/${t}/items/${i}/events/${n}`))}async updateItem(t,i,e,n,o){var d,a;return new s(await r(this.token,"PUT",`/lists/${t}/items/${i}`,n,e,(null==o?void 0:o.ignore)?void 0:null!==(d=null==o?void 0:o.group)&&void 0!==d?d:this.identityGroup,(null==o?void 0:o.ignore)?void 0:null!==(a=null==o?void 0:o.token)&&void 0!==a?a:this.identityToken))}async updateItemData(t,i,e,n,o){var d,a;const l=(null==n?void 0:n.pointer)?`/${n.pointer}`:"";return new s(await r(this.token,"POST",`/lists/${t}/items/${i}/data${l}`,n,e,(null==o?void 0:o.ignore)?void 0:null!==(d=null==o?void 0:o.group)&&void 0!==d?d:this.identityGroup,(null==o?void 0:o.ignore)?void 0:null!==(a=null==o?void 0:o.token)&&void 0!==a?a:this.identityToken))}async replaceItemData(t,i,e,n,o){var d,a;const l=(null==n?void 0:n.pointer)?`/${n.pointer}`:"";return new s(await r(this.token,"PUT",`/lists/${t}/items/${i}/data${l}`,n,e,(null==o?void 0:o.ignore)?void 0:null!==(d=null==o?void 0:o.group)&&void 0!==d?d:this.identityGroup,(null==o?void 0:o.ignore)?void 0:null!==(a=null==o?void 0:o.token)&&void 0!==a?a:this.identityToken))}async patchItemData(t,i,e,n,o){var d,a;const l=(null==n?void 0:n.pointer)?`/${n.pointer}`:"";return new s(await r(this.token,"PATCH",`/lists/${t}/items/${i}/data${l}`,n,e,(null==o?void 0:o.ignore)?void 0:null!==(d=null==o?void 0:o.group)&&void 0!==d?d:this.identityGroup,(null==o?void 0:o.ignore)?void 0:null!==(a=null==o?void 0:o.token)&&void 0!==a?a:this.identityToken))}async deleteItem(t,i,e){var n,o;await r(this.token,"DELETE",`/lists/${t}/items/${i}`,void 0,void 0,(null==e?void 0:e.ignore)?void 0:null!==(n=null==e?void 0:e.group)&&void 0!==n?n:this.identityGroup,(null==e?void 0:e.ignore)?void 0:null!==(o=null==e?void 0:e.token)&&void 0!==o?o:this.identityToken)}async deleteItemData(t,i,e,n){var o,d;const a=(null==e?void 0:e.pointer)?`/${e.pointer}`:"";return new s(await r(this.token,"DELETE",`/lists/${t}/items/${i}/data${a}`,e,void 0,(null==n?void 0:n.ignore)?void 0:null!==(o=null==n?void 0:n.group)&&void 0!==o?o:this.identityGroup,(null==n?void 0:n.ignore)?void 0:null!==(d=null==n?void 0:n.token)&&void 0!==d?d:this.identityToken))}async createIndex(t,i){return new o(await r(this.token,"POST",`/lists/${t}/indexes`,void 0,i))}async fetchIndexes(t,i){const e=await r(this.token,"GET",`/lists/${t}/indexes`,i);return{...e,data:e.data.map((t=>new o(t)))}}async fetchIndex(t,i){return new o(await r(this.token,"GET",`/lists/${t}/indexes/${i}`))}async fetchIndexStats(t,i,e){return await r(this.token,"GET",`/lists/${t}/indexes/${i}/stats`,e)}async fetchIndexEvents(t,i,n){const o=await r(this.token,"GET",`/lists/${t}/indexes/${i}/events`,n);return{...o,data:o.data.map((t=>new e(t)))}}async fetchIndexEvent(t,i,n){return new e(await r(this.token,"GET",`/lists/${t}/indexes/${i}/events/${n}`))}async updateIndex(t,i,e){return new o(await r(this.token,"PATCH",`/lists/${t}/indexes/${i}`,void 0,e))}async deleteIndex(t,i){await r(this.token,"DELETE",`/lists/${t}/indexes/${i}`)}async createIdentity(t){return new n(await r(this.token,"POST","/identities",void 0,t))}async fetchIdentities(t){const i=await r(this.token,"GET","/identities",t);return{...i,data:i.data.map((t=>new n(t)))}}async fetchIdentity(t){return new n(await r(this.token,"GET",`/identities/${t}`))}async fetchIdentityStats(t,i){return await r(this.token,"GET",`/identities/${t}/stats`,i)}async fetchIdentityEvents(t,i){const n=await r(this.token,"GET",`/identities/${t}/events`,i);return{...n,data:n.data.map((t=>new e(t)))}}async fetchIdentityEvent(t,i){return new e(await r(this.token,"GET",`/identities/${t}/events/${i}`))}async updateIdentity(t,i){return new n(await r(this.token,"PUT",`/identities/${t}`,void 0,i))}async deleteIdentity(t){await r(this.token,"DELETE",`/identities/${t}`)}async registerIdentity(t,i){var e,o;return new n(await r(this.token,"POST","/identities/register",void 0,t,(null==i?void 0:i.ignore)?void 0:null!==(e=null==i?void 0:i.group)&&void 0!==e?e:this.identityGroup,(null==i?void 0:i.ignore)?void 0:null!==(o=null==i?void 0:i.token)&&void 0!==o?o:this.identityToken))}async loginIdentity(t,i){var e,o;const s=await r(this.token,"POST","/identities/login",void 0,t,(null==i?void 0:i.ignore)?void 0:null!==(e=null==i?void 0:i.group)&&void 0!==e?e:this.identityGroup,(null==i?void 0:i.ignore)?void 0:null!==(o=null==i?void 0:i.token)&&void 0!==o?o:this.identityToken);return this.identityGroup=s.group||void 0,this.identityToken=s.token||void 0,[new n(a(s,"token")),this.identityToken]}async logoutIdentity(t){var i,e;await r(this.token,"POST","/identities/logout",void 0,void 0,(null==t?void 0:t.ignore)?void 0:null!==(i=null==t?void 0:t.group)&&void 0!==i?i:this.identityGroup,(null==t?void 0:t.ignore)?void 0:null!==(e=null==t?void 0:t.token)&&void 0!==e?e:this.identityToken),this.identityGroup=void 0,this.identityToken=void 0}async fetchSelfIdentity(t){var i,e;return new n(await r(this.token,"GET","/identities/self",void 0,void 0,(null==t?void 0:t.ignore)?void 0:null!==(i=null==t?void 0:t.group)&&void 0!==i?i:this.identityGroup,(null==t?void 0:t.ignore)?void 0:null!==(e=null==t?void 0:t.token)&&void 0!==e?e:this.identityToken))}async updateSelfIdentity(t,i){var e,o;return new n(await r(this.token,"PUT","/identities/self",void 0,t,(null==i?void 0:i.ignore)?void 0:null!==(e=null==i?void 0:i.group)&&void 0!==e?e:this.identityGroup,(null==i?void 0:i.ignore)?void 0:null!==(o=null==i?void 0:i.token)&&void 0!==o?o:this.identityToken))}async deleteSelfIdentity(t){var i,e;await r(this.token,"DELETE","/identities/self",void 0,void 0,(null==t?void 0:t.ignore)?void 0:null!==(i=null==t?void 0:t.group)&&void 0!==i?i:this.identityGroup,(null==t?void 0:t.ignore)?void 0:null!==(e=null==t?void 0:t.token)&&void 0!==e?e:this.identityToken)}},Object.defineProperty(t,"__esModule",{value:!0})}));


/***/ }),

/***/ "./src/client.ts":
/*!***********************!*\
  !*** ./src/client.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Client = void 0;
const jsonpad_realtime_sdk_1 = __webpack_require__(/*! @basementuniverse/jsonpad-realtime-sdk */ "./node_modules/@basementuniverse/jsonpad-realtime-sdk/build/jsonpad-realtime-sdk.js");
const jsonpad_sdk_1 = __webpack_require__(/*! @basementuniverse/jsonpad-sdk */ "./node_modules/@basementuniverse/jsonpad-sdk/build/jsonpad-sdk.js");
const events_1 = __webpack_require__(/*! ./events */ "./src/events/index.ts");
class Client extends EventTarget {
    constructor(options) {
        super();
        this.options = Object.assign({}, Client.defaultOptions, options !== null && options !== void 0 ? options : {});
        this.jsonpad = new jsonpad_sdk_1.default(this.options.jsonpadClientToken);
        this.jsonpadRealtime = new jsonpad_realtime_sdk_1.default(this.options.jsonpadClientToken);
        this.jsonpadRealtime.listen(['item-created', 'item-updated'], [this.options.jsonpadGamesList], ['*']);
        this.jsonpadRealtime.addEventListener('item-created', (e) => {
            const game = {
                id: e.detail.model.id,
                ...e.detail.model.data,
            };
            this.dispatchEvent(new events_1.GameCreatedEvent(game));
        });
        this.jsonpadRealtime.addEventListener('item-updated', (e) => {
            const game = {
                id: e.detail.model.id,
                ...e.detail.model.data,
            };
            switch (game.lastEventType) {
                case 'game-created':
                    return;
                case 'player-joined':
                    this.dispatchEvent(new events_1.PlayerJoinedEvent(game));
                    return;
                case 'player-moved':
                    this.dispatchEvent(new events_1.PlayerMovedEvent(game));
                    return;
                case 'timed-out':
                    this.dispatchEvent(new events_1.TimedOutEvent(game));
                    return;
                case 'game-finished':
                    this.dispatchEvent(new events_1.GameFinishedEvent(game));
                    return;
            }
        });
    }
    async fetchGames(parameters) {
        const response = await this.jsonpad.fetchItems(this.options.jsonpadGamesList, {
            ...parameters,
            includeData: true,
        });
        return {
            page: response.page,
            limit: response.limit,
            total: response.total,
            games: response.data.map(item => ({
                id: item.id,
                ...item.data,
                startedAt: item.data.startedAt ? new Date(item.data.startedAt) : null,
                finishedAt: item.data.finishedAt
                    ? new Date(item.data.finishedAt)
                    : null,
            })),
        };
    }
    async fetchGame(gameId) {
        const game = await this.jsonpad.fetchItemData(this.options.jsonpadGamesList, gameId);
        return {
            id: gameId,
            ...game,
            startedAt: game.startedAt ? new Date(game.startedAt) : null,
            finishedAt: game.finishedAt ? new Date(game.finishedAt) : null,
        };
    }
    async fetchState(gameId, token) {
        const response = await fetch(`${this.options.asobiServerUrl}/state/${gameId}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${token}`,
            },
        });
        if (!response.ok) {
            throw new Error(await response.text());
        }
        const json = await response.json();
        return {
            ...json.game,
            startedAt: json.game.startedAt ? new Date(json.game.startedAt) : null,
            finishedAt: json.game.finishedAt ? new Date(json.game.finishedAt) : null,
        };
    }
    async createGame(playerName, playerData, gameData) {
        const response = await fetch(`${this.options.asobiServerUrl}/create-game`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                playerName,
                playerData,
                gameData,
            }),
        });
        if (!response.ok) {
            throw new Error(await response.text());
        }
        const json = await response.json();
        return [
            {
                ...json.game,
                startedAt: json.game.startedAt ? new Date(json.game.startedAt) : null,
                finishedAt: json.game.finishedAt
                    ? new Date(json.game.finishedAt)
                    : null,
            },
            json.token,
        ];
    }
    async joinGame(gameId, playerName, playerData) {
        const response = await fetch(`${this.options.asobiServerUrl}/join-game/${gameId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                playerName,
                playerData,
            }),
        });
        if (!response.ok) {
            throw new Error(await response.text());
        }
        const json = await response.json();
        return [
            {
                ...json.game,
                startedAt: json.game.startedAt ? new Date(json.game.startedAt) : null,
                finishedAt: json.game.finishedAt
                    ? new Date(json.game.finishedAt)
                    : null,
            },
            json.token,
        ];
    }
    async move(gameId, token, moveData) {
        const response = await fetch(`${this.options.asobiServerUrl}/move/${gameId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                Authorization: `Bearer ${token}`,
            },
            body: JSON.stringify({
                moveData,
            }),
        });
        if (!response.ok) {
            throw new Error(await response.text());
        }
        const json = await response.json();
        return {
            ...json.game,
            startedAt: json.game.startedAt ? new Date(json.game.startedAt) : null,
            finishedAt: json.game.finishedAt ? new Date(json.game.finishedAt) : null,
        };
    }
}
exports.Client = Client;
Client.defaultOptions = {
    jsonpadClientToken: '',
    jsonpadGamesList: '',
    asobiServerUrl: '',
};


/***/ }),

/***/ "./src/events/game-created.ts":
/*!************************************!*\
  !*** ./src/events/game-created.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GameCreatedEvent = void 0;
class GameCreatedEvent extends CustomEvent {
    constructor(detail) {
        super('game-created', { detail });
    }
}
exports.GameCreatedEvent = GameCreatedEvent;


/***/ }),

/***/ "./src/events/game-finished.ts":
/*!*************************************!*\
  !*** ./src/events/game-finished.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GameFinishedEvent = void 0;
class GameFinishedEvent extends CustomEvent {
    constructor(detail) {
        super('game-finished', { detail });
    }
}
exports.GameFinishedEvent = GameFinishedEvent;


/***/ }),

/***/ "./src/events/index.ts":
/*!*****************************!*\
  !*** ./src/events/index.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./game-created */ "./src/events/game-created.ts"), exports);
__exportStar(__webpack_require__(/*! ./game-finished */ "./src/events/game-finished.ts"), exports);
__exportStar(__webpack_require__(/*! ./player-joined */ "./src/events/player-joined.ts"), exports);
__exportStar(__webpack_require__(/*! ./player-moved */ "./src/events/player-moved.ts"), exports);
__exportStar(__webpack_require__(/*! ./timed-out */ "./src/events/timed-out.ts"), exports);


/***/ }),

/***/ "./src/events/player-joined.ts":
/*!*************************************!*\
  !*** ./src/events/player-joined.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PlayerJoinedEvent = void 0;
class PlayerJoinedEvent extends CustomEvent {
    constructor(detail) {
        super('player-joined', { detail });
    }
}
exports.PlayerJoinedEvent = PlayerJoinedEvent;


/***/ }),

/***/ "./src/events/player-moved.ts":
/*!************************************!*\
  !*** ./src/events/player-moved.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PlayerMovedEvent = void 0;
class PlayerMovedEvent extends CustomEvent {
    constructor(detail) {
        super('player-moved', { detail });
    }
}
exports.PlayerMovedEvent = PlayerMovedEvent;


/***/ }),

/***/ "./src/events/timed-out.ts":
/*!*********************************!*\
  !*** ./src/events/timed-out.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TimedOutEvent = void 0;
class TimedOutEvent extends CustomEvent {
    constructor(detail) {
        super('timed-out', { detail });
    }
}
exports.TimedOutEvent = TimedOutEvent;


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsobiClient = void 0;
var client_1 = __webpack_require__(/*! ./client */ "./src/client.ts");
Object.defineProperty(exports, "AsobiClient", ({ enumerable: true, get: function () { return client_1.Client; } }));
__exportStar(__webpack_require__(/*! ./types */ "./src/types.ts"), exports);


/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PlayerStatus = exports.GameStatus = void 0;
var GameStatus;
(function (GameStatus) {
    GameStatus["WAITING_TO_START"] = "waiting_to_start";
    GameStatus["STARTED"] = "started";
    GameStatus["FINISHED"] = "finished";
})(GameStatus = exports.GameStatus || (exports.GameStatus = {}));
var PlayerStatus;
(function (PlayerStatus) {
    PlayerStatus["WAITING_FOR_TURN"] = "waiting_for_turn";
    PlayerStatus["TAKING_TURN"] = "taking_turn";
    PlayerStatus["FINISHED"] = "finished";
})(PlayerStatus = exports.PlayerStatus || (exports.PlayerStatus = {}));


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,